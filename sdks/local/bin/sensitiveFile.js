"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SensitiveFile = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class SensitiveFile extends pulumi.CustomResource {
    /**
     * Get an existing SensitiveFile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SensitiveFile(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SensitiveFile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SensitiveFile.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["contentBase64"] = state ? state.contentBase64 : undefined;
            resourceInputs["contentBase64sha256"] = state ? state.contentBase64sha256 : undefined;
            resourceInputs["contentBase64sha512"] = state ? state.contentBase64sha512 : undefined;
            resourceInputs["contentMd5"] = state ? state.contentMd5 : undefined;
            resourceInputs["contentSha1"] = state ? state.contentSha1 : undefined;
            resourceInputs["contentSha256"] = state ? state.contentSha256 : undefined;
            resourceInputs["contentSha512"] = state ? state.contentSha512 : undefined;
            resourceInputs["directoryPermission"] = state ? state.directoryPermission : undefined;
            resourceInputs["filePermission"] = state ? state.filePermission : undefined;
            resourceInputs["filename"] = state ? state.filename : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.filename === undefined) && !opts.urn) {
                throw new Error("Missing required property 'filename'");
            }
            resourceInputs["content"] = (args === null || args === void 0 ? void 0 : args.content) ? pulumi.secret(args.content) : undefined;
            resourceInputs["contentBase64"] = (args === null || args === void 0 ? void 0 : args.contentBase64) ? pulumi.secret(args.contentBase64) : undefined;
            resourceInputs["directoryPermission"] = args ? args.directoryPermission : undefined;
            resourceInputs["filePermission"] = args ? args.filePermission : undefined;
            resourceInputs["filename"] = args ? args.filename : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["contentBase64sha256"] = undefined /*out*/;
            resourceInputs["contentBase64sha512"] = undefined /*out*/;
            resourceInputs["contentMd5"] = undefined /*out*/;
            resourceInputs["contentSha1"] = undefined /*out*/;
            resourceInputs["contentSha256"] = undefined /*out*/;
            resourceInputs["contentSha512"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["content", "contentBase64"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SensitiveFile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.SensitiveFile = SensitiveFile;
/** @internal */
SensitiveFile.__pulumiType = 'local:index/sensitiveFile:SensitiveFile';
//# sourceMappingURL=sensitiveFile.js.map