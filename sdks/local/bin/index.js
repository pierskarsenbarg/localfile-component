"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SensitiveFile = exports.getSensitiveFileOutput = exports.getSensitiveFile = exports.getFileOutput = exports.getFile = exports.File = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
exports.File = null;
utilities.lazyLoad(exports, ["File"], () => require("./file"));
exports.getFile = null;
exports.getFileOutput = null;
utilities.lazyLoad(exports, ["getFile", "getFileOutput"], () => require("./getFile"));
exports.getSensitiveFile = null;
exports.getSensitiveFileOutput = null;
utilities.lazyLoad(exports, ["getSensitiveFile", "getSensitiveFileOutput"], () => require("./getSensitiveFile"));
__exportStar(require("./provider"), exports);
const provider_1 = require("./provider");
exports.SensitiveFile = null;
utilities.lazyLoad(exports, ["SensitiveFile"], () => require("./sensitiveFile"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "local:index/file:File":
                return new exports.File(name, undefined, { urn });
            case "local:index/sensitiveFile:SensitiveFile":
                return new exports.SensitiveFile(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("local", "index/file", _module);
pulumi.runtime.registerResourceModule("local", "index/sensitiveFile", _module);
pulumi.runtime.registerResourcePackage("local", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:local") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new provider_1.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map