"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Site = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class Site extends pulumi.CustomResource {
    /**
     * Get an existing Site resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Site(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Site.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Site.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["agentAnonMode"] = state ? state.agentAnonMode : undefined;
            resourceInputs["agentLevel"] = state ? state.agentLevel : undefined;
            resourceInputs["attackThresholds"] = state ? state.attackThresholds : undefined;
            resourceInputs["blockDurationSeconds"] = state ? state.blockDurationSeconds : undefined;
            resourceInputs["blockHttpCode"] = state ? state.blockHttpCode : undefined;
            resourceInputs["blockRedirectUrl"] = state ? state.blockRedirectUrl : undefined;
            resourceInputs["clientIpRules"] = state ? state.clientIpRules : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["immediateBlock"] = state ? state.immediateBlock : undefined;
            resourceInputs["primaryAgentKey"] = state ? state.primaryAgentKey : undefined;
            resourceInputs["shortName"] = state ? state.shortName : undefined;
            resourceInputs["siteId"] = state ? state.siteId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.shortName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shortName'");
            }
            resourceInputs["agentAnonMode"] = args ? args.agentAnonMode : undefined;
            resourceInputs["agentLevel"] = args ? args.agentLevel : undefined;
            resourceInputs["attackThresholds"] = args ? args.attackThresholds : undefined;
            resourceInputs["blockDurationSeconds"] = args ? args.blockDurationSeconds : undefined;
            resourceInputs["blockHttpCode"] = args ? args.blockHttpCode : undefined;
            resourceInputs["blockRedirectUrl"] = args ? args.blockRedirectUrl : undefined;
            resourceInputs["clientIpRules"] = args ? args.clientIpRules : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["immediateBlock"] = args ? args.immediateBlock : undefined;
            resourceInputs["shortName"] = args ? args.shortName : undefined;
            resourceInputs["siteId"] = args ? args.siteId : undefined;
            resourceInputs["primaryAgentKey"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["primaryAgentKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Site.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.Site = Site;
/** @internal */
Site.__pulumiType = 'sigsci:index/site:Site';
//# sourceMappingURL=site.js.map