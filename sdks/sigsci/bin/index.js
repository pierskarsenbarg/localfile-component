"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.types = exports.config = exports.SiteTemplatedRule = exports.SiteSignalTag = exports.SiteRule = exports.SiteRedaction = exports.SiteList = exports.SiteIntegration = exports.SiteHeaderLink = exports.SiteBlocklist = exports.SiteAllowlist = exports.SiteAlert = exports.SiteAgentAlert = exports.Site = exports.getSitesOutput = exports.getSites = exports.EdgeDeploymentServiceBackend = exports.EdgeDeploymentService = exports.EdgeDeployment = exports.CorpSignalTag = exports.CorpRule = exports.CorpList = exports.CorpIntegration = exports.CorpCloudwafInstance = exports.CorpCloudwafCertificate = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
exports.CorpCloudwafCertificate = null;
utilities.lazyLoad(exports, ["CorpCloudwafCertificate"], () => require("./corpCloudwafCertificate"));
exports.CorpCloudwafInstance = null;
utilities.lazyLoad(exports, ["CorpCloudwafInstance"], () => require("./corpCloudwafInstance"));
exports.CorpIntegration = null;
utilities.lazyLoad(exports, ["CorpIntegration"], () => require("./corpIntegration"));
exports.CorpList = null;
utilities.lazyLoad(exports, ["CorpList"], () => require("./corpList"));
exports.CorpRule = null;
utilities.lazyLoad(exports, ["CorpRule"], () => require("./corpRule"));
exports.CorpSignalTag = null;
utilities.lazyLoad(exports, ["CorpSignalTag"], () => require("./corpSignalTag"));
exports.EdgeDeployment = null;
utilities.lazyLoad(exports, ["EdgeDeployment"], () => require("./edgeDeployment"));
exports.EdgeDeploymentService = null;
utilities.lazyLoad(exports, ["EdgeDeploymentService"], () => require("./edgeDeploymentService"));
exports.EdgeDeploymentServiceBackend = null;
utilities.lazyLoad(exports, ["EdgeDeploymentServiceBackend"], () => require("./edgeDeploymentServiceBackend"));
exports.getSites = null;
exports.getSitesOutput = null;
utilities.lazyLoad(exports, ["getSites", "getSitesOutput"], () => require("./getSites"));
__exportStar(require("./provider"), exports);
const provider_1 = require("./provider");
exports.Site = null;
utilities.lazyLoad(exports, ["Site"], () => require("./site"));
exports.SiteAgentAlert = null;
utilities.lazyLoad(exports, ["SiteAgentAlert"], () => require("./siteAgentAlert"));
exports.SiteAlert = null;
utilities.lazyLoad(exports, ["SiteAlert"], () => require("./siteAlert"));
exports.SiteAllowlist = null;
utilities.lazyLoad(exports, ["SiteAllowlist"], () => require("./siteAllowlist"));
exports.SiteBlocklist = null;
utilities.lazyLoad(exports, ["SiteBlocklist"], () => require("./siteBlocklist"));
exports.SiteHeaderLink = null;
utilities.lazyLoad(exports, ["SiteHeaderLink"], () => require("./siteHeaderLink"));
exports.SiteIntegration = null;
utilities.lazyLoad(exports, ["SiteIntegration"], () => require("./siteIntegration"));
exports.SiteList = null;
utilities.lazyLoad(exports, ["SiteList"], () => require("./siteList"));
exports.SiteRedaction = null;
utilities.lazyLoad(exports, ["SiteRedaction"], () => require("./siteRedaction"));
exports.SiteRule = null;
utilities.lazyLoad(exports, ["SiteRule"], () => require("./siteRule"));
exports.SiteSignalTag = null;
utilities.lazyLoad(exports, ["SiteSignalTag"], () => require("./siteSignalTag"));
exports.SiteTemplatedRule = null;
utilities.lazyLoad(exports, ["SiteTemplatedRule"], () => require("./siteTemplatedRule"));
// Export sub-modules:
const config = require("./config");
exports.config = config;
const types = require("./types");
exports.types = types;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "sigsci:index/corpCloudwafCertificate:CorpCloudwafCertificate":
                return new exports.CorpCloudwafCertificate(name, undefined, { urn });
            case "sigsci:index/corpCloudwafInstance:CorpCloudwafInstance":
                return new exports.CorpCloudwafInstance(name, undefined, { urn });
            case "sigsci:index/corpIntegration:CorpIntegration":
                return new exports.CorpIntegration(name, undefined, { urn });
            case "sigsci:index/corpList:CorpList":
                return new exports.CorpList(name, undefined, { urn });
            case "sigsci:index/corpRule:CorpRule":
                return new exports.CorpRule(name, undefined, { urn });
            case "sigsci:index/corpSignalTag:CorpSignalTag":
                return new exports.CorpSignalTag(name, undefined, { urn });
            case "sigsci:index/edgeDeployment:EdgeDeployment":
                return new exports.EdgeDeployment(name, undefined, { urn });
            case "sigsci:index/edgeDeploymentService:EdgeDeploymentService":
                return new exports.EdgeDeploymentService(name, undefined, { urn });
            case "sigsci:index/edgeDeploymentServiceBackend:EdgeDeploymentServiceBackend":
                return new exports.EdgeDeploymentServiceBackend(name, undefined, { urn });
            case "sigsci:index/site:Site":
                return new exports.Site(name, undefined, { urn });
            case "sigsci:index/siteAgentAlert:SiteAgentAlert":
                return new exports.SiteAgentAlert(name, undefined, { urn });
            case "sigsci:index/siteAlert:SiteAlert":
                return new exports.SiteAlert(name, undefined, { urn });
            case "sigsci:index/siteAllowlist:SiteAllowlist":
                return new exports.SiteAllowlist(name, undefined, { urn });
            case "sigsci:index/siteBlocklist:SiteBlocklist":
                return new exports.SiteBlocklist(name, undefined, { urn });
            case "sigsci:index/siteHeaderLink:SiteHeaderLink":
                return new exports.SiteHeaderLink(name, undefined, { urn });
            case "sigsci:index/siteIntegration:SiteIntegration":
                return new exports.SiteIntegration(name, undefined, { urn });
            case "sigsci:index/siteList:SiteList":
                return new exports.SiteList(name, undefined, { urn });
            case "sigsci:index/siteRedaction:SiteRedaction":
                return new exports.SiteRedaction(name, undefined, { urn });
            case "sigsci:index/siteRule:SiteRule":
                return new exports.SiteRule(name, undefined, { urn });
            case "sigsci:index/siteSignalTag:SiteSignalTag":
                return new exports.SiteSignalTag(name, undefined, { urn });
            case "sigsci:index/siteTemplatedRule:SiteTemplatedRule":
                return new exports.SiteTemplatedRule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("sigsci", "index/corpCloudwafCertificate", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/corpCloudwafInstance", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/corpIntegration", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/corpList", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/corpRule", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/corpSignalTag", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/edgeDeployment", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/edgeDeploymentService", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/edgeDeploymentServiceBackend", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/site", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/siteAgentAlert", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/siteAlert", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/siteAllowlist", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/siteBlocklist", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/siteHeaderLink", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/siteIntegration", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/siteList", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/siteRedaction", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/siteRule", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/siteSignalTag", _module);
pulumi.runtime.registerResourceModule("sigsci", "index/siteTemplatedRule", _module);
pulumi.runtime.registerResourcePackage("sigsci", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:sigsci") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new provider_1.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map